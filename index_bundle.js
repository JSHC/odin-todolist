(()=>{var e={110:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,".checkbox {\r\n    border: 1px solid #333;\r\n    width: 25px;\r\n    height: 25px;\r\n    background-color: #fff;\r\n}","",{version:3,sources:["webpack://./src/components/Checkbox.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,WAAW;IACX,YAAY;IACZ,sBAAsB;AAC1B",sourcesContent:[".checkbox {\r\n    border: 1px solid #333;\r\n    width: 25px;\r\n    height: 25px;\r\n    background-color: #fff;\r\n}"],sourceRoot:""}]);const a=d},9:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,"header {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    align-items: center;\r\n    background-color: #FC8621;\r\n    box-shadow: 0 3px 5px #aaa;\r\n\r\n    grid-row: 1;\r\n    grid-column: 1 / span 2;\r\n}\r\n\r\n.buttons-container {\r\n    grid-column: 2;\r\n    grid-row: 1;\r\n    display: flex;\r\n    margin-right: 4rem;\r\n    gap: 25px;\r\n    align-items: center;\r\n    justify-content: end;\r\n}\r\n\r\n.buttons-container button {\r\n    padding: 10px 30px;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n    color: #333;\r\n    background-color: #fff;\r\n}\r\n\r\n.add-todo-button {\r\n    border: 1px solid #0099ff;\r\n}\r\n\r\n.buttons-container button:hover {\r\n    cursor: pointer;\r\n    background-color: #eee;\r\n}\r\n\r\n.add-project-button {\r\n    border: 1px solid #2eec57;\r\n}\r\n\r\nnav {\r\n    justify-self: start;\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n    margin-left: 2rem;\r\n}\r\n\r\nnav ul {\r\n    list-style: none;\r\n}\r\n\r\nnav ul li a {\r\n    text-decoration: none;\r\n    color: #333;\r\n}","",{version:3,sources:["webpack://./src/modules/Layout/header.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB,0BAA0B;;IAE1B,WAAW;IACX,uBAAuB;AAC3B;;AAEA;IACI,cAAc;IACd,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,SAAS;IACT,mBAAmB;IACnB,oBAAoB;AACxB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;IACX,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,mBAAmB;IACnB,cAAc;IACd,WAAW;IACX,iBAAiB;AACrB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,WAAW;AACf",sourcesContent:["header {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    align-items: center;\r\n    background-color: #FC8621;\r\n    box-shadow: 0 3px 5px #aaa;\r\n\r\n    grid-row: 1;\r\n    grid-column: 1 / span 2;\r\n}\r\n\r\n.buttons-container {\r\n    grid-column: 2;\r\n    grid-row: 1;\r\n    display: flex;\r\n    margin-right: 4rem;\r\n    gap: 25px;\r\n    align-items: center;\r\n    justify-content: end;\r\n}\r\n\r\n.buttons-container button {\r\n    padding: 10px 30px;\r\n    font-weight: bold;\r\n    border-radius: 8px;\r\n    color: #333;\r\n    background-color: #fff;\r\n}\r\n\r\n.add-todo-button {\r\n    border: 1px solid #0099ff;\r\n}\r\n\r\n.buttons-container button:hover {\r\n    cursor: pointer;\r\n    background-color: #eee;\r\n}\r\n\r\n.add-project-button {\r\n    border: 1px solid #2eec57;\r\n}\r\n\r\nnav {\r\n    justify-self: start;\r\n    grid-column: 1;\r\n    grid-row: 1;\r\n    margin-left: 2rem;\r\n}\r\n\r\nnav ul {\r\n    list-style: none;\r\n}\r\n\r\nnav ul li a {\r\n    text-decoration: none;\r\n    color: #333;\r\n}"],sourceRoot:""}]);const a=d},464:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,".sidebar {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n\r\n    background-color: #FAF9F6;\r\n}","",{version:3,sources:["webpack://./src/modules/Layout/sidebar.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,WAAW;;IAEX,yBAAyB;AAC7B",sourcesContent:[".sidebar {\r\n    grid-column: 1;\r\n    grid-row: 2;\r\n\r\n    background-color: #FAF9F6;\r\n}"],sourceRoot:""}]);const a=d},780:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,"\r\n.todo-items-container {\r\n    display: grid;\r\n    gap: 25px;\r\n    grid-template-columns: minmax(300px, min-content);\r\n}\r\n\r\n\r\n\r\n.todo-item {\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-template-columns: minmax(200px, 300px) minmax(200px, 300px);\r\n    align-items: center;\r\n    border: 1px solid #ccc;\r\n    border-left: 8px solid rgb(68, 127, 255);\r\n\r\n    border-radius: 4px;\r\n    padding: 5px 10px;\r\n    background-color: #FAF9F6;\r\n}\r\n\r\n.todo-item:hover {\r\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16);\r\n    cursor: pointer;\r\n}\r\n\r\n.todo-item h3 {\r\n    margin: 0;\r\n    padding: 0;\r\n    align-self: end;\r\n}\r\n\r\n.todo-item h3 a {\r\n    text-decoration: none;\r\n    color: #000;\r\n}\r\n\r\n.checkBoxContainer {\r\n    justify-self: end;\r\n    grid-row: 1 / span 2;\r\n    grid-column: 2;\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    justify-items: center;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n}\r\n\r\n.checkBoxContainer span {\r\n    font-size: 12px;\r\n}\r\n\r\n.priority-high {\r\n    border-left: 8px solid rgb(255, 87, 58);\r\n}\r\n\r\n.priority-medium {\r\n    border-left: 8px solid rgb(255, 202, 58);\r\n}\r\n\r\n.priority-low {\r\n    border: 1px solid rgb(140, 253, 88);\r\n    border-left: 8px solid rgb(140, 253, 88);\r\n}\r\n\r\n.checkbox:hover {\r\n    cursor:default;\r\n}\r\n\r\n.delete-project-button {\r\n    border: 0;\r\n    padding: 8px 30px;\r\n    background-color: rgb(255, 66, 66);\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    justify-self: start;\r\n}\r\n\r\n.delete-project-button:disabled {\r\n    background-color: #bbb;\r\n    cursor: not-allowed;\r\n}","",{version:3,sources:["webpack://./src/modules/Project/ProjectDetail.css"],names:[],mappings:";AACA;IACI,aAAa;IACb,SAAS;IACT,iDAAiD;AACrD;;;;AAIA;IACI,aAAa;IACb,2BAA2B;IAC3B,gEAAgE;IAChE,mBAAmB;IACnB,sBAAsB;IACtB,wCAAwC;;IAExC,kBAAkB;IAClB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,2CAA2C;IAC3C,eAAe;AACnB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;IACpB,cAAc;IACd,aAAa;IACb,2BAA2B;IAC3B,qBAAqB;IACrB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,uCAAuC;AAC3C;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,mCAAmC;IACnC,wCAAwC;AAC5C;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,kCAAkC;IAClC,YAAY;IACZ,iBAAiB;IACjB,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,mBAAmB;AACvB",sourcesContent:["\r\n.todo-items-container {\r\n    display: grid;\r\n    gap: 25px;\r\n    grid-template-columns: minmax(300px, min-content);\r\n}\r\n\r\n\r\n\r\n.todo-item {\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-template-columns: minmax(200px, 300px) minmax(200px, 300px);\r\n    align-items: center;\r\n    border: 1px solid #ccc;\r\n    border-left: 8px solid rgb(68, 127, 255);\r\n\r\n    border-radius: 4px;\r\n    padding: 5px 10px;\r\n    background-color: #FAF9F6;\r\n}\r\n\r\n.todo-item:hover {\r\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16);\r\n    cursor: pointer;\r\n}\r\n\r\n.todo-item h3 {\r\n    margin: 0;\r\n    padding: 0;\r\n    align-self: end;\r\n}\r\n\r\n.todo-item h3 a {\r\n    text-decoration: none;\r\n    color: #000;\r\n}\r\n\r\n.checkBoxContainer {\r\n    justify-self: end;\r\n    grid-row: 1 / span 2;\r\n    grid-column: 2;\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr;\r\n    justify-items: center;\r\n    align-items: center;\r\n    padding: 0px 10px;\r\n}\r\n\r\n.checkBoxContainer span {\r\n    font-size: 12px;\r\n}\r\n\r\n.priority-high {\r\n    border-left: 8px solid rgb(255, 87, 58);\r\n}\r\n\r\n.priority-medium {\r\n    border-left: 8px solid rgb(255, 202, 58);\r\n}\r\n\r\n.priority-low {\r\n    border: 1px solid rgb(140, 253, 88);\r\n    border-left: 8px solid rgb(140, 253, 88);\r\n}\r\n\r\n.checkbox:hover {\r\n    cursor:default;\r\n}\r\n\r\n.delete-project-button {\r\n    border: 0;\r\n    padding: 8px 30px;\r\n    background-color: rgb(255, 66, 66);\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    justify-self: start;\r\n}\r\n\r\n.delete-project-button:disabled {\r\n    background-color: #bbb;\r\n    cursor: not-allowed;\r\n}"],sourceRoot:""}]);const a=d},846:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,".project-list-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, minmax(200px, 300px));\r\n    gap: 25px;\r\n}\r\n.project-list-container h2 {\r\n    grid-row: 1;\r\n}\r\n\r\n.project-list-container a {\r\n    grid-row: 2;\r\n    text-decoration: none;\r\n}\r\n\r\n.project-card {\r\n    color: #000;\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    background-color: #FAF9F6;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\n.project-card:hover {\r\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16);\r\n}\r\n\r\n.project-card h3 {\r\n    margin: 0;\r\n    padding: 0;\r\n}","",{version:3,sources:["webpack://./src/modules/Project/ProjectList.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sDAAsD;IACtD,SAAS;AACb;AACA;IACI,WAAW;AACf;;AAEA;IACI,WAAW;IACX,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,aAAa;IACb,yBAAyB;IACzB,sBAAsB;AAC1B;;AAEA;IACI,2CAA2C;AAC/C;;AAEA;IACI,SAAS;IACT,UAAU;AACd",sourcesContent:[".project-list-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, minmax(200px, 300px));\r\n    gap: 25px;\r\n}\r\n.project-list-container h2 {\r\n    grid-row: 1;\r\n}\r\n\r\n.project-list-container a {\r\n    grid-row: 2;\r\n    text-decoration: none;\r\n}\r\n\r\n.project-card {\r\n    color: #000;\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    background-color: #FAF9F6;\r\n    border: 1px solid #ccc;\r\n}\r\n\r\n.project-card:hover {\r\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16);\r\n}\r\n\r\n.project-card h3 {\r\n    margin: 0;\r\n    padding: 0;\r\n}"],sourceRoot:""}]);const a=d},528:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,'form {\r\n    display: grid;\r\n    grid-template-columns: minmax(30%, 400px);\r\n    justify-items: start;\r\n    gap: 10px;\r\n    padding: 20px;\r\n}\r\n\r\nform input[type="text"], textarea {\r\n    justify-self: stretch;\r\n}\r\n\r\nform button {\r\n    border: 0;\r\n    padding: 8px 30px;\r\n    background-color: rgb(0, 140, 255);\r\n    color: white;\r\n    font-weight: bold;\r\n}',"",{version:3,sources:["webpack://./src/modules/TodoItem/AddTodoItem.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,yCAAyC;IACzC,oBAAoB;IACpB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,kCAAkC;IAClC,YAAY;IACZ,iBAAiB;AACrB",sourcesContent:['form {\r\n    display: grid;\r\n    grid-template-columns: minmax(30%, 400px);\r\n    justify-items: start;\r\n    gap: 10px;\r\n    padding: 20px;\r\n}\r\n\r\nform input[type="text"], textarea {\r\n    justify-self: stretch;\r\n}\r\n\r\nform button {\r\n    border: 0;\r\n    padding: 8px 30px;\r\n    background-color: rgb(0, 140, 255);\r\n    color: white;\r\n    font-weight: bold;\r\n}'],sourceRoot:""}]);const a=d},563:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,".todoItemContent {\r\n    width: 30%;\r\n    display: grid;\r\n    grid-template-columns: 2fr 3fr;\r\n    justify-items: start;\r\n    gap: 10px;\r\n}\r\n\r\n.todo-item-container h2 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n}\r\n\r\n.todo-item-container {\r\n    background-color: #FAF9F6;\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    box-shadow: 2px 2px 5px rgba(0,0,0,0.17);\r\n}\r\n\r\n.project span {\r\n    grid-column: 1;\r\n\r\n}\r\n\r\n.project select {\r\n    grid-column: 2;\r\n}\r\n\r\n.delete-todoitem-button {\r\n    border: 0;\r\n    padding: 8px 30px;\r\n    background-color: rgb(255, 66, 66);\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\n.delete-todoitem-button button:hover {\r\n    background-color: rgb(255, 87, 87);\r\n}","",{version:3,sources:["webpack://./src/modules/TodoItem/TodoItemDetail.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,aAAa;IACb,8BAA8B;IAC9B,oBAAoB;IACpB,SAAS;AACb;;AAEA;IACI,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,aAAa;IACb,wCAAwC;AAC5C;;AAEA;IACI,cAAc;;AAElB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,kCAAkC;IAClC,YAAY;IACZ,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,kCAAkC;AACtC",sourcesContent:[".todoItemContent {\r\n    width: 30%;\r\n    display: grid;\r\n    grid-template-columns: 2fr 3fr;\r\n    justify-items: start;\r\n    gap: 10px;\r\n}\r\n\r\n.todo-item-container h2 {\r\n    margin: 0;\r\n    margin-bottom: 1rem;\r\n}\r\n\r\n.todo-item-container {\r\n    background-color: #FAF9F6;\r\n    border-radius: 8px;\r\n    padding: 1rem;\r\n    box-shadow: 2px 2px 5px rgba(0,0,0,0.17);\r\n}\r\n\r\n.project span {\r\n    grid-column: 1;\r\n\r\n}\r\n\r\n.project select {\r\n    grid-column: 2;\r\n}\r\n\r\n.delete-todoitem-button {\r\n    border: 0;\r\n    padding: 8px 30px;\r\n    background-color: rgb(255, 66, 66);\r\n    color: white;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n}\r\n\r\n.delete-todoitem-button button:hover {\r\n    background-color: rgb(255, 87, 87);\r\n}"],sourceRoot:""}]);const a=d},426:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(537),o=n.n(r),i=n(645),d=n.n(i)()(o());d.push([e.id,"* {\r\n    font-family: 'Helvetica', 'Arial', sans-serif;\r\n}\r\n\r\nbody {\r\n    background-color: #E8F0F2;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n\r\n    display: grid;\r\n    grid-template-columns: 300px 1fr;\r\n    grid-template-rows: 60px 1fr;\r\n}\r\n\r\n.main-content {\r\n    padding: 20px 40px;\r\n    grid-column: 2;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,6CAA6C;AACjD;;AAEA;IACI,yBAAyB;IACzB,SAAS;IACT,UAAU;IACV,WAAW;IACX,aAAa;;IAEb,aAAa;IACb,gCAAgC;IAChC,4BAA4B;AAChC;;AAEA;IACI,kBAAkB;IAClB,cAAc;AAClB",sourcesContent:["* {\r\n    font-family: 'Helvetica', 'Arial', sans-serif;\r\n}\r\n\r\nbody {\r\n    background-color: #E8F0F2;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100vh;\r\n\r\n    display: grid;\r\n    grid-template-columns: 300px 1fr;\r\n    grid-template-rows: 60px 1fr;\r\n}\r\n\r\n.main-content {\r\n    padding: 20px 40px;\r\n    grid-column: 2;\r\n}"],sourceRoot:""}]);const a=d},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,i){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(d[s]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&d[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},d=[],a=0;a<e.length;a++){var s=e[a],c=r.base?s[0]+r.base:s[0],l=i[c]||0,A="".concat(c," ").concat(l);i[c]=l+1;var p=n(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(u);else{var m=o(u,r);r.byIndex=a,t.splice(a,0,{identifier:A,updater:m,references:1})}d.push(A)}return d}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var i=r(e=e||[],o=o||{});return function(e){e=e||[];for(var d=0;d<i.length;d++){var a=n(i[d]);t[a].references--}for(var s=r(e,o),c=0;c<i.length;c++){var l=n(i[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=s}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},586:e=>{e.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg>'}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{"use strict";const e=new class{events={};publish(e,t){if(console.log(`publish called for event ${e} with data ${JSON.stringify(t)}`),this.events[e])for(let n of this.events[e])console.log(`calling ${n} for ${e}`),n(t)}subscribe(e,t){console.log(`subscribe: ${e}, ${t}`),this.events[e]||(this.events[e]=[]),this.events[e].push(t),console.log(`${t} subscribed to ${e}`)}unsubscribe(e,t){this.events[e]&&this.events[e].remove(this.events[e].find((e=>e===t)))}};class t{constructor(e,t,n,r,o,i){this.id=e,this.title=t,this.priority=n,this.description=r,this.dueDate=o,this.isComplete=!1,this.projectId=i}static priorities={1:"Critical",2:"Important",3:"Default"}}function r(e){return 0===e.length?1:e.reduce(((e,t)=>e.id<t.id?t:e)).id+1}function o(t,n){e.publish("changePage",{page:t,data:n})}function i(e,t){return e.findIndex((e=>e.id===t))}const d=JSON.parse(localStorage.getItem("todoItems"))||[];function a(n,o,i,a,s){const c=r(d);if(!(n&&o&&i&&a))return null;if(!Number(o))return null;const l=new t(c,n,Number(o),i,a,s||1);return d.push(l),e.publish("TodoItemsChanged"),l}function s(){return d}function c(e){return d.find((t=>t.id===e))}e.subscribe("TodoItemsChanged",(()=>{localStorage.setItem("todoItems",JSON.stringify(d))}));class l{constructor(e,t){this.id=e,this.name=t}}const A=JSON.parse(localStorage.getItem("projects"))||[];function p(t){const n=r(A),o=new l(n,t);return A.push(o),e.publish("ProjectChanged"),o}function u(){return A}function m(e){return A.find((t=>t.id===e))}0===A.length&&p("Default"),e.subscribe("ProjectChanged",(()=>{localStorage.setItem("projects",JSON.stringify(A))}));var C=n(379),h=n.n(C),g=n(795),b=n.n(g),I=n(569),f=n.n(I),x=n(565),B=n.n(x),v=n(216),y=n.n(v),E=n(589),k=n.n(E),j=n(563),w={};w.styleTagTransform=k(),w.setAttributes=B(),w.insert=f().bind(null,"head"),w.domAPI=b(),w.insertStyleElement=y(),h()(j.Z,w),j.Z&&j.Z.locals&&j.Z.locals;var L=n(586),T=n.n(L),D=n(110),S={};S.styleTagTransform=k(),S.setAttributes=B(),S.insert=f().bind(null,"head"),S.domAPI=b(),S.insertStyleElement=y(),h()(D.Z,S),D.Z&&D.Z.locals&&D.Z.locals;class P{constructor(e,t){return this.checked=e,this.callback=t,this.checkboxDiv=document.createElement("div"),this.checkboxDiv.addEventListener("click",this.onClick.bind(this)),this.checkboxDiv.classList.add("checkbox"),this.updateCheckMark(),this.checkboxDiv}toggle(){this.checked?this.checked=!1:this.checked=!0,this.updateCheckMark()}updateCheckMark(){if(this.checked){const e=document.createElement("div");e.innerHTML=T(),this.checkboxDiv.appendChild(e.firstChild)}else this.checkboxDiv.innerHTML=""}onClick(){this.toggle(),this.callback()}}const Z=new class{render(n){if(this.todoItem=c(n),!this.todoItem)return;const r=m(this.todoItem.projectId),a=document.createElement("div");a.classList.add("todo-item-container");const s=document.createElement("h2");s.textContent=this.todoItem.title;const l=document.createElement("div");l.classList.add("todoItemContent");const A=document.createElement("span");A.textContent="Project: ",l.appendChild(A);const p=document.createElement("a");p.href="#",p.textContent=r.name,p.addEventListener("click",(e=>{e.preventDefault(),o("ProjectDetail",r.id)})),A.appendChild(p);const C=document.createElement("select");C.name="project";for(let e of u()){const t=document.createElement("option");t.name="project",t.value=e.id,t.text=e.name,C.appendChild(t),e.id===this.todoItem.projectId&&(t.selected=!0)}C.addEventListener("change",(e=>{this.todoItem.projectId=Number(e.target.value),this.onItemChange()})),l.appendChild(C);const h=document.createElement("label");h.setAttribute("for","priority"),h.textContent="Priority",l.appendChild(h);const g=document.createElement("select");g.required=!0,g.name="priority",g.id="priority";for(const e of Object.keys(t.priorities)){const n=Number(e),r=document.createElement("option");r.name="priority",r.value=n,r.text=t.priorities[n],n===this.todoItem.priority&&(r.selected=!0),g.appendChild(r)}g.addEventListener("change",(e=>{this.todoItem.priority=Number(e.target.value),this.onItemChange()})),l.appendChild(g);const b=document.createElement("label");b.setAttribute("for","description"),b.textContent="Description";const I=document.createElement("input");I.value=this.todoItem.description,I.name="description",I.addEventListener("change",(e=>{this.todoItem.description=e.target.value,this.onItemChange()})),l.appendChild(b),l.appendChild(I);const f=document.createElement("label");f.setAttribute("for","dueDate"),f.textContent="Due Date",l.appendChild(f);const x=document.createElement("input");x.type="date",x.name="dueDate",x.value=this.todoItem.dueDate,x.addEventListener("change",(e=>{this.todoItem.dueDate=e.target.value,this.onItemChange()})),l.appendChild(x);const B=document.createElement("span");B.textContent="Is completed";const v=new P(this.todoItem.isComplete,(()=>{this.todoItem.isComplete=!this.todoItem.isComplete,this.onItemChange()}));l.appendChild(B),l.appendChild(v);const y=document.createElement("button");return y.textContent="Delete",y.classList.add("delete-todoitem-button"),y.addEventListener("click",(t=>{!function(t){d.splice(i(d,t),1),e.publish("TodoItemsChanged")}(this.todoItem.id),e.publish("changePage",{page:"ProjectDetail",data:r.id})})),l.appendChild(y),a.appendChild(s),a.appendChild(l),a}onItemChange(){var t;c((t=this.todoItem).id)&&(d[i(t.id)]=t,e.publish("TodoItemsChanged")),o("TodoItemDetail",this.todoItem.id)}},F=new class{getTodoItemsForProject(e){return s().filter((t=>t.projectId===e))}};var W=n(846),N={};N.styleTagTransform=k(),N.setAttributes=B(),N.insert=f().bind(null,"head"),N.domAPI=b(),N.insertStyleElement=y(),h()(W.Z,N),W.Z&&W.Z.locals&&W.Z.locals;const q=new class{render(){const e=u(),t=document.createElement("div");t.classList.add("project-list-container");const n=document.createElement("h2");n.textContent="Projects",t.appendChild(n);for(let n of e){const e=document.createElement("a");e.href="#",e.addEventListener("click",(e=>this.onProjectLinkClick(e,n)));const r=document.createElement("div");r.classList.add("project-card");const o=document.createElement("h3");o.textContent=n.name;const i=document.createElement("span"),d=F.getTodoItemsForProject(n.id).length;i.textContent=`Todo items: ${d}`,e.appendChild(r),r.appendChild(o),r.appendChild(i),t.appendChild(e)}return t}onProjectLinkClick(e,t){e.preventDefault(),console.log({project:t}),o("ProjectDetail",t.id)}};var M=n(9),O={};O.styleTagTransform=k(),O.setAttributes=B(),O.insert=f().bind(null,"head"),O.domAPI=b(),O.insertStyleElement=y(),h()(M.Z,O),M.Z&&M.Z.locals&&M.Z.locals;const R=new class{pageLinks=[{name:"Projects",page:"ProjectList"}];render(){const e=document.createElement("header"),t=document.createElement("nav"),n=document.createElement("ul");n.classList.add("header-links");for(let e of this.pageLinks){const t=document.createElement("li");t.classList.add("header-link-item");const r=document.createElement("a");r.href="#",r.textContent=e.name,r.addEventListener("click",(t=>this.onHeaderLinkClick(t,e))),t.appendChild(r),n.appendChild(t)}t.appendChild(n);const r=document.createElement("div");r.classList.add("buttons-container");const i=document.createElement("button");i.classList.add("add-project-button"),i.textContent="Add Project",i.addEventListener("click",(e=>{o("AddProject")}));const d=document.createElement("button");return d.classList.add("add-todo-button"),d.textContent="Add Todo Item",d.addEventListener("click",(e=>{o("AddTodoItem")})),r.appendChild(i),r.appendChild(d),e.appendChild(t),e.appendChild(r),e}onHeaderLinkClick(t,n){t.preventDefault(),e.publish("changePage",{page:n.page})}};var U=n(464),$={};$.styleTagTransform=k(),$.setAttributes=B(),$.insert=f().bind(null,"head"),$.domAPI=b(),$.insertStyleElement=y(),h()(U.Z,$),U.Z&&U.Z.locals&&U.Z.locals;const z=new class{render(){const e=document.createElement("div");return e.className="sidebar",e}};var H=n(780),X={};X.styleTagTransform=k(),X.setAttributes=B(),X.insert=f().bind(null,"head"),X.domAPI=b(),X.insertStyleElement=y(),h()(H.Z,X),H.Z&&H.Z.locals&&H.Z.locals;const Y=new class{render(n){const r=m(n),d=F.getTodoItemsForProject(r.id),a=document.createElement("div");a.classList.add("project-detail");const s=document.createElement("h2");s.textContent=r.name||"Project Details",a.appendChild(s);const c=document.createElement("div");c.classList.add("todo-items-container");for(let e of d){const n=document.createElement("div");n.classList.add("todo-item"),n.classList.add(`priority-${t.priorities[e.priority].toLowerCase()}`);const r=document.createElement("h3");r.textContent=e.title,n.appendChild(r);const i=document.createElement("div");i.textContent=`Due date: ${e.dueDate}`,n.appendChild(i);const d=document.createElement("div");d.classList.add("checkBoxContainer");const a=document.createElement("span");a.textContent="Finished?";const s=new P(e.isComplete,(()=>{e.isComplete=!e.isComplete}));d.appendChild(a),d.appendChild(s),n.appendChild(d),n.addEventListener("click",(t=>{t.preventDefault(),console.log(t.target),console.log(t.currentTarget),console.log(t.target.tagName),t.target!==s&&"svg"!==t.target.tagName&&o("TodoItemDetail",e.id)})),c.appendChild(n)}const l=document.createElement("button");return l.textContent="Delete Project",l.classList.add("delete-project-button"),("Default"===r.name||u().length<=1)&&(l.disabled=!0),l.addEventListener("click",(t=>{!function(t){A.splice(i(A,t),1),e.publish("ProjectChanged")}(r.id),o("ProjectList")})),c.appendChild(l),a.appendChild(c),a}};var J=n(528),V={};V.styleTagTransform=k(),V.setAttributes=B(),V.insert=f().bind(null,"head"),V.domAPI=b(),V.insertStyleElement=y(),h()(J.Z,V),J.Z&&J.Z.locals&&J.Z.locals;const _=new class{render(){const e=u(),n=document.createElement("div"),r=document.createElement("h2");r.textContent="Add Todo Item";const o=document.createElement("form");o.addEventListener("submit",this.onFormSubmit);const i=document.createElement("label");i.setAttribute("for","title"),i.textContent="Title",o.appendChild(i);const d=document.createElement("input");d.required=!0,d.name="title",d.type="text",d.id="title",o.appendChild(d);const a=document.createElement("label");a.setAttribute("for","priority"),a.textContent="Priority",o.appendChild(a);const s=document.createElement("select");s.required=!0,s.name="priority",s.id="priority";for(let e of Object.keys(t.priorities)){const n=document.createElement("option");n.name="priority",n.value=e,n.text=t.priorities[e],s.appendChild(n)}o.appendChild(s);const c=document.createElement("label");c.setAttribute("for","description"),c.textContent="Description",o.appendChild(c);const l=document.createElement("textarea");l.required=!0,l.name="description",l.id="description",o.appendChild(l);const A=document.createElement("label");A.setAttribute("for","dueDate"),A.textContent="Due Date",o.appendChild(A);const p=document.createElement("input");p.required=!0,p.type="date",p.name="dueDate",p.id="dueDate",o.appendChild(p);const m=document.createElement("label");m.setAttribute("for","project"),m.textContent="Project";const C=document.createElement("select");C.required=!0,C.name="project",C.id="project";for(let t of e){const e=document.createElement("option");e.value=t.id,e.textContent=t.name,C.appendChild(e)}o.appendChild(C);const h=document.createElement("button");return h.type="submit",h.textContent="Add",o.appendChild(h),n.appendChild(r),n.appendChild(o),n}onFormSubmit(e){e.preventDefault();const t=e.target;if(!t.checkValidity())return void t.reportValidity();let n=new FormData(t);a(n.get("title"),n.get("priority"),n.get("description"),n.get("dueDate"),Number(n.get("project")))?t.reset():console.log("Error when creating new todo item")}},G=new class{render(){const e=document.createElement("div"),t=document.createElement("h2");t.textContent="Add Project";const n=document.createElement("form");n.addEventListener("submit",this.onFormSubmit);const r=document.createElement("label");r.setAttribute("for","name"),r.textContent="Project name",n.appendChild(r);const o=document.createElement("input");o.type="text",o.name="name",o.id="name",o.required=!0,n.appendChild(o);const i=document.createElement("button");return i.textContent="Add",n.appendChild(i),e.appendChild(t),e.appendChild(n),e}onFormSubmit(e){e.preventDefault();const t=e.target;if(!t.checkValidity())return void t.reportValidity();const n=new FormData(t);p(n.get("name"))&&o("ProjectList"),console.table(n)}};var K=n(426),Q={};Q.styleTagTransform=k(),Q.setAttributes=B(),Q.insert=f().bind(null,"head"),Q.domAPI=b(),Q.insertStyleElement=y(),h()(K.Z,Q),K.Z&&K.Z.locals&&K.Z.locals,console.log("TodoList app loaded"),0===s().length&&(a("Test",1,"Test Description","2022-12-29"),a("Test2",1,"Test Description 2","2022-12-30")),console.table(s());const ee={TodoItemDetail:Z,ProjectList:q,ProjectDetail:Y,AddTodoItem:_,AddProject:G};e.subscribe("changePage",ne),document.body.appendChild(R.render()),document.body.appendChild(z.render());const te=document.createElement("div");function ne(e){console.log(e),e.page&&ee[e.page]&&(te.innerHTML="",te.appendChild(ee[e.page].render(e.data)))}te.classList.add("main-content"),document.body.appendChild(te),ne({page:"ProjectList"})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,