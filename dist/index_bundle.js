(()=>{"use strict";const e=new class{events={};publish(e,t){if(console.log(`publish called for event ${e} with data ${JSON.stringify(t)}`),this.events[e])for(let n of this.events[e])console.log(`calling ${n} for ${e}`),n(t)}subscribe(e,t){console.log(`subscribe: ${e}, ${t}`),this.events[e]||(this.events[e]=[]),this.events[e].push(t),console.log(`${t} subscribed to ${e}`)}unsubscribe(e,t){this.events[e]&&this.events[e].remove(this.events[e].find((e=>e===t)))}};class t{constructor(e,t,n,c,o){this.id=e,this.title=t,this.description=n,this.dueDate=c,this.isComplete=!1,this.projectId=o||1}}function n(t,n){e.publish("changePage",{page:t,data:n})}const c=[];function o(e,n,o){const d=0===(i=c).length?1:i.reduce(((e,t)=>e.id<t.value?t:e)).id+1;var i;const s=new t(d,e,n,o);return c.push(s),s}function d(){return c}const i=[new class{constructor(e,t){this.id=e,this.name=t}}(1,"Default")];function s(){return i}function a(e){return i.find((t=>t.id===e))}const l=new class{getProjectById(e){return a(e)}getTodoItemsForProject(e){return d().filter((t=>t.projectId===e))}},r=new class{render(t){const o=function(e){return c.find((t=>t.id===e))}(t);if(!o)return;const d=l.getProjectById(o.projectId),i=document.createElement("div"),s=document.createElement("h2");s.textContent=o.title;const a=document.createElement("div"),r=document.createElement("div");r.textContent="Project: ";const p=document.createElement("a");p.href="#",p.textContent=d.name,p.addEventListener("click",(e=>{e.preventDefault(),n("ProjectDetail",d.id)})),r.appendChild(p),a.appendChild(r);const u=document.createElement("div");u.textContent=o.description,a.appendChild(u);const m=document.createElement("div");m.textContent=o.dueDate,a.appendChild(m);const h=document.createElement("div");h.textContent=o.isComplete,a.appendChild(h);const C=document.createElement("button");return C.textContent="Delete",C.classList.add("delete-button"),C.addEventListener("click",(t=>{(function(e){c.splice(function(e){return c.findIndex((t=>t.id===e))}(e),1)})(o.id),e.publish("changePage",{page:"ProjectDetail",data:d.id})})),a.appendChild(C),i.appendChild(s),i.appendChild(a),i}},p=new class{render(){const e=s(),t=document.createElement("div");t.classList.add("project-list-container");const n=document.createElement("h2");n.textContent="Projects";const c=document.createElement("ul");c.classList.add("project-list");for(let t of e){const e=document.createElement("li");e.classList.add("project-list-item");const n=document.createElement("a");n.href="#",n.textContent=t.name,n.addEventListener("click",(e=>this.onProjectLinkClick(e,t))),e.appendChild(n),c.appendChild(e)}return t.appendChild(n),t.appendChild(c),t}onProjectLinkClick(e,t){e.preventDefault(),console.log({project:t}),n("ProjectDetail",1)}},u=new class{pageLinks=[{name:"Projects",page:"ProjectList"}];render(){const e=document.createElement("header"),t=document.createElement("nav"),n=document.createElement("ul");n.classList.add("header-links");for(let e of this.pageLinks){const t=document.createElement("li");t.classList.add("header-link-item");const c=document.createElement("a");c.href="#",c.textContent=e.name,c.addEventListener("click",(t=>this.onHeaderLinkClick(t,e))),t.appendChild(c),n.appendChild(t)}return t.appendChild(n),e.appendChild(t),e}onHeaderLinkClick(t,n){t.preventDefault(),e.publish("changePage",{page:n.page})}},m=new class{render(e){const t=a(e),c=l.getTodoItemsForProject(e);console.table(c);const o=document.createElement("div");o.classList.add("project-detail");const d=document.createElement("h2");d.textContent=t.name||"Project Details",o.appendChild(d);const i=document.createElement("div");i.classList.add("todo-items-container");for(let e of c){const t=document.createElement("div");t.classList.add("todo-item");const c=document.createElement("a");c.href="#",c.addEventListener("click",(t=>{t.preventDefault(),n("TodoItemDetail",e.id)}));const o=document.createElement("h3");o.textContent=e.title,c.appendChild(o),t.appendChild(c);const d=document.createElement("div");d.textContent=`Due date: ${e.dueDate}`,t.appendChild(d),i.appendChild(t)}return o.appendChild(i),o}};console.log("TodoList app loaded"),o("Test","Test Description","2022-12-29"),o("Test2","Test Description 2","2022-12-30"),console.table(d());const h={TodoItemDetail:r,ProjectList:p,ProjectDetail:m};e.subscribe("changePage",f),document.body.appendChild(u.render());const C=document.createElement("div");function f(e){console.log(e),e.page&&h[e.page]&&(C.innerHTML="",C.appendChild(h[e.page].render(e.data)))}C.classList.add("main-content"),document.body.appendChild(C),f({page:"ProjectList"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,