(()=>{"use strict";const e=new class{events={};publish(e,t){if(console.log(`publish called for event ${e} with data ${JSON.stringify(t)}`),this.events[e])for(let n of this.events[e])console.log(`calling ${n} for ${e}`),n(t)}subscribe(e,t){console.log(`subscribe: ${e}, ${t}`),this.events[e]||(this.events[e]=[]),this.events[e].push(t),console.log(`${t} subscribed to ${e}`)}unsubscribe(e,t){this.events[e]&&this.events[e].remove(this.events[e].find((e=>e===t)))}};class t{constructor(e,t,n,c,s){this.id=e,this.title=t,this.description=n,this.dueDate=c,this.isComplete=!1,this.projectId=s||1}}const n=[];function c(e,c,s){const o=0===(d=n).length?1:d.reduce(((e,t)=>e.id<t.value?t:e)).id+1;var d;const i=new t(o,e,c,s);return n.push(i),i}function s(){return n}const o=new class{render(e){const t=function(e){return n.find((t=>t.id===e))}(e);if(!t)return;const c=document.createElement("div"),s=document.createElement("h2");s.textContent=t.title;const o=document.createElement("div"),d=document.createElement("div");d.textContent=t.description,o.appendChild(d);const i=document.createElement("div");i.textContent=t.dueDate,o.appendChild(i);const a=document.createElement("div");return a.textContent=t.isComplete,o.appendChild(a),c.appendChild(s),c.appendChild(o),c}},d=[new class{constructor(e,t){this.id=e,this.name=t}}(1,"Default")];function i(){return d}const a=new class{render(){const e=i(),t=document.createElement("div");t.classList.add("project-list-container");const n=document.createElement("h2");n.textContent="Projects";const c=document.createElement("ul");c.classList.add("project-list");for(let t of e){const e=document.createElement("li");e.classList.add("project-list-item");const n=document.createElement("a");n.href="#",n.textContent=t.name,n.addEventListener("click",(e=>this.onProjectLinkClick(e,t))),e.appendChild(n),c.appendChild(e)}return t.appendChild(n),t.appendChild(c),t}onProjectLinkClick(t,n){t.preventDefault(),console.log({project:n}),e.publish("changePage",{page:"ProjectDetail",data:1})}},l=new class{pageLinks=[{name:"Projects",page:"ProjectList"}];render(){const e=document.createElement("header"),t=document.createElement("nav"),n=document.createElement("ul");n.classList.add("header-links");for(let e of this.pageLinks){const t=document.createElement("li");t.classList.add("header-link-item");const c=document.createElement("a");c.href="#",c.textContent=e.name,c.addEventListener("click",(t=>this.onHeaderLinkClick(t,e))),t.appendChild(c),n.appendChild(t)}return t.appendChild(n),e.appendChild(t),e}onHeaderLinkClick(t,n){t.preventDefault(),e.publish("changePage",{page:n.page})}},r=new class{render(e){const t=function(e){return d.find((t=>t.id===e))}(e),n=(c=e,s().filter((e=>e.projectId===c)));var c;console.table(n);const o=document.createElement("div");o.classList.add("project-detail");const i=document.createElement("h2");i.textContent=t.name||"Project Details",o.appendChild(i);const a=document.createElement("div");a.classList.add("todo-items-container");for(let e of n){const t=document.createElement("div");t.classList.add("todo-item");const n=document.createElement("h3");n.textContent=e.title,t.appendChild(n);const c=document.createElement("div");c.textContent=`Due date: ${e.dueDate}`,t.appendChild(c),a.appendChild(t)}return o.appendChild(a),o}};console.log("TodoList app loaded"),c("Test","Test Description","2022-12-29"),c("Test2","Test Description 2","2022-12-30"),console.table(s());const p={TodoItemDetail:o,ProjectList:a,ProjectDetail:r};e.subscribe("changePage",m),document.body.appendChild(l.render());const u=document.createElement("div");function m(e){console.log(e),e.page&&p[e.page]&&(u.innerHTML="",u.appendChild(p[e.page].render(e.data)))}u.classList.add("main-content"),document.body.appendChild(u),m({page:"ProjectList"})})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,